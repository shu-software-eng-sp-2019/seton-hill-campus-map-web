{"version":3,"sources":["Store/Actions/authActions.js","Components/Admin/AdminDashboard.jsx"],"names":["signIn","credentials","dispatch","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","emailReg","newUser","getState","firestore","getFirestore","createUserWithEmailAndPassword","response","collection","doc","user","uid","set","firstName","lastName","initials","BuildingAdmin","React","lazy","ParkingLotAdmin","AdminDashboard","props","firebaseSignOut","className","style","height","width","marginBottom","onClick","float","to","defaultProps","compose","connect","state"],"mappings":"wHAAA,mHAEMA,EAAS,SAAAC,GAAW,OAAI,SAACC,GAC7BC,IAASC,OAAOC,2BACdJ,EAAYK,MACZL,EAAYM,UACZC,MAAK,WACLN,EAAS,CAAEO,KAAM,qBAChBC,OAAM,SAACC,GACRT,EAAS,CAAEO,KAAM,cAAeE,aAI9BC,EAAU,kBAAM,SAACV,GACrBC,IAASC,OAAOQ,UAAUJ,MAAK,WAC7BN,EAAS,CAAEO,KAAM,yBAIfI,EAAW,SAAAC,GAAO,OAAI,SAACZ,EAAUa,EAAX,GAA2C,IAC/DC,GAAYC,EADkD,EAAnBA,gBAEjDd,IAASC,OAAOc,+BACdJ,EAAQR,MACRQ,EAAQP,UACRC,MAAK,SAAAW,GAAQ,OAAIH,EAAUI,WAAW,SAASC,IAAIF,EAASG,KAAKC,KAAKC,IAAI,CAC1EC,UAAWX,EAAQW,UACnBC,SAAUZ,EAAQY,SAClBC,SAAUb,EAAQW,UAAU,GAAKX,EAAQY,SAAS,QAChDlB,MAAK,WACPN,EAAS,CAAEO,KAAM,wBAEhBC,OAAM,SAACC,GACNT,EAAS,CAAEO,KAAM,iBAAkBE,c,iCChCzC,sEASMiB,EAAgBC,IAAMC,MAAK,kBAAM,iCACjCC,EAAkBF,IAAMC,MAAK,kBAAM,iCAEnCE,EAAiB,SAACC,GAAW,IACzB7B,EAA0B6B,EAA1B7B,KAAM8B,EAAoBD,EAApBC,gBACd,OAAK9B,EAAKmB,IAER,yBAAKY,UAAU,kBAAkBC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,aAAc,SACrF,kBAAC,IAAD,CAAQC,QAASN,EAAiBC,UAAW,OAAQC,MAAO,CAACK,MAAO,UAApE,YACA,kBAACb,EAAD,MACA,kBAACG,EAAD,OALoB,kBAAC,IAAD,CAAUW,GAAG,aAUvCV,EAAeW,aAAe,CAC5BvC,KAAM,GACN8B,gBAAiB,MAgBJU,4BACbC,aALsB,SAAAC,GAAK,MAAK,CAChC1C,KAAM0C,EAAM3C,SAASC,SALI,SAAAF,GAAQ,MAAK,CACtCgC,gBAAiB,kBAAMhC,EAASU,oBAOnBgC,CAEbZ","file":"static/js/8.0604ccfc.chunk.js","sourcesContent":["import firebase from '../../Config/firebase';\r\n\r\nconst signIn = credentials => (dispatch) => {\r\n  firebase.auth().signInWithEmailAndPassword(\r\n    credentials.email,\r\n    credentials.password,\r\n  ).then(() => {\r\n    dispatch({ type: 'LOGIN_SUCCESS' });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'LOGIN_ERROR', err });\r\n  });\r\n};\r\n\r\nconst signOut = () => (dispatch) => {\r\n  firebase.auth().signOut().then(() => {\r\n    dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n  });\r\n};\r\n\r\nconst emailReg = newUser => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  firebase.auth().createUserWithEmailAndPassword(\r\n    newUser.email,\r\n    newUser.password,\r\n  ).then(response => firestore.collection('users').doc(response.user.uid).set({\r\n    firstName: newUser.firstName,\r\n    lastName: newUser.lastName,\r\n    initials: newUser.firstName[0] + newUser.lastName[0],\r\n  })).then(() => {\r\n    dispatch({ type: 'REGISTER_SUCCESS' });\r\n  })\r\n    .catch((err) => {\r\n      dispatch({ type: 'REGISTER_ERROR', err });\r\n    });\r\n};\r\n\r\nexport {\r\n  signIn, signOut, emailReg,\r\n};\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {\r\n  Button\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { signOut } from '../../Store/Actions/authActions';\r\nconst BuildingAdmin = React.lazy(() => import('./BuildingAdmin'));\r\nconst ParkingLotAdmin = React.lazy(() => import('./ParkingLotAdmin'));\r\n\r\nconst AdminDashboard = (props) => {\r\n  const { auth, firebaseSignOut } = props;\r\n  if (!auth.uid) { return <Redirect to=\"/signin\" />; }\r\n  return (\r\n    <div className=\"container-fluid\" style={{ height: '100%', width: '100%', marginBottom: '60px' }}>\r\n      <Button onClick={firebaseSignOut} className={'mt-2'} style={{float: 'right'}}>Sign Out</Button>\r\n      <BuildingAdmin />\r\n      <ParkingLotAdmin />\r\n    </div>\r\n  );\r\n};\r\n\r\nAdminDashboard.defaultProps = {\r\n  auth: {},\r\n  firebaseSignOut: null,\r\n};\r\n\r\nAdminDashboard.propTypes = {\r\n  auth: PropTypes.object,\r\n  firebaseSignOut: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  firebaseSignOut: () => dispatch(signOut()),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(AdminDashboard);\r\n\r\n"],"sourceRoot":""}
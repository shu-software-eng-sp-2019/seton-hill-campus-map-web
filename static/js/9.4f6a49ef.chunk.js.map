{"version":3,"sources":["Store/Actions/authActions.js","Components/Admin/AdminDashboard.jsx"],"names":["__webpack_require__","d","__webpack_exports__","signIn","googleSignIn","signOut","emailReg","_Config_firebase__WEBPACK_IMPORTED_MODULE_0__","credentials","dispatch","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","getState","_ref","firestore","getFirestore","provider","GoogleAuthProvider","useDeviceLanguage","signInWithPopup","result","user","firstName","displayName","split","lastName","collection","doc","uid","set","initials","newUser","_ref2","createUserWithEmailAndPassword","response","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","redux__WEBPACK_IMPORTED_MODULE_4__","_Store_Actions_authActions__WEBPACK_IMPORTED_MODULE_5__","BuildingAdmin","React","lazy","e","bind","ParkingLotAdmin","AdminDashboard","props","firebaseSignOut","a","createElement","className","style","height","width","marginBottom","onClick","float","to","defaultProps","compose","connect","state"],"mappings":"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","file":"static/js/9.4f6a49ef.chunk.js","sourcesContent":["import firebase from '../../Config/firebase';\n\nconst signIn = credentials => (dispatch) => {\n  firebase.auth().signInWithEmailAndPassword(\n    credentials.email,\n    credentials.password,\n  ).then(() => {\n    dispatch({ type: 'LOGIN_SUCCESS' });\n  }).catch((err) => {\n    dispatch({ type: 'LOGIN_ERROR', err });\n  });\n};\n\nconst googleSignIn = () => (dispatch, getState, { getFirestore }) => {\n  const firestore = getFirestore();\n  const provider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().useDeviceLanguage();\n  firebase.auth().signInWithPopup(provider).then((result) => {\n    const { user } = result;\n    const firstName = user.displayName.split(' ')[0];\n    const lastName = user.displayName.split(' ')[1];\n    firestore.collection('users').doc(user.uid).set({\n      firstName,\n      lastName,\n      initials: firstName[0] + lastName[0],\n    })\n      .catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  }).then(() => {\n    dispatch({ type: 'LOGIN_SUCCESS' });\n  })\n    .catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n};\n\nconst signOut = () => (dispatch) => {\n  firebase.auth().signOut().then(() => {\n    dispatch({ type: 'SIGNOUT_SUCCESS' });\n  });\n};\n\nconst emailReg = newUser => (dispatch, getState, { getFirestore }) => {\n  const firestore = getFirestore();\n  firebase.auth().createUserWithEmailAndPassword(\n    newUser.email,\n    newUser.password,\n  ).then(response => firestore.collection('users').doc(response.user.uid).set({\n    firstName: newUser.firstName,\n    lastName: newUser.lastName,\n    initials: newUser.firstName[0] + newUser.lastName[0],\n  })).then(() => {\n    dispatch({ type: 'REGISTER_SUCCESS' });\n  })\n    .catch((err) => {\n      dispatch({ type: 'REGISTER_ERROR', err });\n    });\n};\n\nexport {\n  signIn, googleSignIn, signOut, emailReg,\n};\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport {\n  Button\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { signOut } from '../../Store/Actions/authActions';\nconst BuildingAdmin = React.lazy(() => import('./BuildingAdmin'));\nconst ParkingLotAdmin = React.lazy(() => import('./ParkingLotAdmin'));\n\nconst AdminDashboard = (props) => {\n  const { auth, firebaseSignOut } = props;\n  if (!auth.uid) { return <Redirect to=\"/signin\" />; }\n  return (\n    <div className=\"container-fluid\" style={{ height: '100%', width: '100%', marginBottom: '60px' }}>\n      <Button onClick={firebaseSignOut} className={'mt-2'} style={{float: 'right'}}>Sign Out</Button>\n      <BuildingAdmin />\n      <ParkingLotAdmin />\n    </div>\n  );\n};\n\nAdminDashboard.defaultProps = {\n  auth: {},\n  firebaseSignOut: null,\n};\n\nAdminDashboard.propTypes = {\n  auth: PropTypes.object,\n  firebaseSignOut: PropTypes.func,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  firebaseSignOut: () => dispatch(signOut()),\n});\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(AdminDashboard);\n\n"],"sourceRoot":""}